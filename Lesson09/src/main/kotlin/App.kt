/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package lesson03

import mapper
import java.util.Date
import java.time.LocalDate
import kotlin.reflect.KClass
import kotlin.reflect.KFunction
import kotlin.reflect.full.memberFunctions

class App {
    val greeting: String
        get() {
            return "Hello World!"
        }
}


class CourseExt(val name: String, val semester: Int,val  programme: String) {}
class CourseInternal(val name: String,val semester: Int, val programme: String, numStudents: Int = -1) {}


fun mapCourseExtToCourseInternal(courseExt: CourseExt): CourseInternal {
    return CourseInternal(courseExt.name, courseExt.semester, courseExt.programme)
}

fun mapCourseInternalToCourseExternal(courseInt: CourseInternal): CourseExt {
    return CourseExt(courseInt.name, courseInt.semester, courseInt.programme)
}




fun main() {
    val d = Date()
    val d1 = Date(124, 1, 1)

    var ld: LocalDate = LocalDate.parse("2018-12-12")


    var dateKClass: KClass<Date> = Date::class

    val getYearRep:KFunction<*> =  dateKClass.memberFunctions.first() { it.name == "getYear" }
    val getYearLdRep:KFunction<*> =  LocalDate::class.memberFunctions.first() { it.name == "getYear" }

    println(getYearRep.call(d1))
    println(getYearLdRep.call(ld))

    val ext = CourseExt("LAE", 4, "LEIC")
    val int: CourseInternal = mapper(ext, CourseInternal::class) as CourseInternal

}

